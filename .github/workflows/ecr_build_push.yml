name: build-push-docker-images-ecr

on:
  push:
    branches:
      - main # Run pipeline on pushes to the main branch

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      AWS_REGION: "ca-central-1"
      AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
      ECR_REPO: "${{ secrets.ECR_REPO }}" #

    steps:

      # Step 0: Configure AWS credentials using OIDC
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ca-central-1

      # Step 1: Checkout the repository
      - name: Checkout Repository
        uses: actions/checkout@v3

      # Step 2: Authenticate Docker with ECR
      - name: Authenticate Docker to Amazon ECR
        run: |
          aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/
          

      # Step 3: Build Images Using Docker Compose
      - name: Build Docker Images with Compose
        run: docker compose build

      # Step 4: List the images available
      - name: Docker images list
        run: docker images

      # Step 4: Tag and Push Images to ECR
      - name: Tag and Push Images
        run: |
          # Generate a unique tag using the current timestamp or Git commit hash
          unique_tag=$(git rev-parse --short HEAD)  # Use timestamp
          
          # Get a list of Docker images (repository:tag format)
          images=$(docker images --format "{{.Repository}}:{{.Tag}}" | grep -v "<none>")
          
          # Loop through the images, tag them, and push to ECR
          for image in $images; do
            # Extract the repository name and tag
            image_tag=$(echo $image | cut -d':' -f2)  # Extracts the image's tag (for unique derivation)
          
            # Derive the ECR image URL with unique tag
            ecr_image="$AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_REPO:${image_tag}-${unique_tag}"
          
            # Tag the image for ECR
            docker tag $image $ecr_image
          
            # Push the tagged image to ECR
            docker push $ecr_image
          done

        # Step 5: Create a Docker Manifest
      - name: Create Docker Manifest
        run: |
              # Generate the unique tag used in Step 4
              unique_tag=$(git rev-parse --short HEAD)
          
              # Get a list of tagged ECR images created in Step 4
              manifest_images=$(docker images --format "{{.Repository}}:{{.Tag}}" | grep -v "<none>" | while read image; do
                image_tag=$(echo $image | cut -d':' -f2)  # Extract the tag
                echo "$AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_REPO:${image_tag}-${unique_tag}"
              done)
          
              # Create Docker manifest from the collected ECR images
              docker manifest create "$AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_REPO:build-${unique_tag}" $manifest_images
          
              # Push the Docker manifest to ECR
              docker manifest push "$AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_REPO:build-${unique_tag}"